theme_dspp_cat <- function() {
theme_void() +
theme(
# Set background to white
panel.background = element_rect(fill = "white", colour = NA),
plot.background = element_rect(fill = "white", colour = NA),
# Legend settings for vertical layout
legend.position = c(0.3, 0.80), # Top-left corner inside the plot
legend.direction = "vertical", # Arrange legend items vertically
legend.title = element_text(size = 22,  family = "roboto"),
legend.text = element_text(size = 16, family = "roboto"),
legend.key = element_rect(fill = "white", colour = "black"), # Proper key background
legend.key.height = unit(0.5, "cm"), # Increase height for better visibility
legend.key.width = unit(0.5, "cm"), # Keep width balanced
legend.spacing.y = unit(0.5, "cm"), # Add vertical spacing between keys
legend.box.margin = margin(t = 5, r = 5, b = 5, l = 5), # Margin around the legend box
legend.margin = margin(t = 10, r = 10, b = 10, l = 10) # Inner margin of legend
)
}
#Figure 4: new_relapse_tb_cases_tested_xpert2 ---------------------------
map5 <- ggplot(data = PAKshp_genx) +
geom_sf(aes(fill = cut(perc_confirmed_genx,
breaks = c(-Inf, 0, 20, 40, 60, 80, Inf),
labels = c("0%", "1-20%", "21-40%", "41-60%", "61-80%", "80%+"))),
colour = "white", linewidth = 0.1) +
geom_sf(data = PAKreg, colour = '#432818', fill = NA, linewidth = 0.1) +
scale_fill_manual(
name = "Percentage of confirmed TB cases tested with GenX (2018)",
values = c(
"0%" = "black",
"1-20%" = "#ffccd5",
"21-40%" = "#ff8fa3",
"41-60%" = "#ff4d6d",
"61-80%" = "#c9184a",
"80%+" = "#800f2f"
)) +  theme_dspp_cat()
map5
ggsave("PAKISTAN_case_study_analysis/figures/map5_genxtesting_perc.png", width = 18, height = 18, units = "cm", dpi = 300)
}
theme_dspp_cat <- function() {
theme_void() +
theme(
# Set background to white
panel.background = element_rect(fill = "white", colour = NA),
plot.background = element_rect(fill = "white", colour = NA),
# Legend settings for vertical layout
legend.position = c(0.3, 0.80), # Top-left corner inside the plot
legend.direction = "vertical", # Arrange legend items vertically
legend.title = element_text(size = 26,  family = "roboto"),
legend.text = element_text(size = 16, family = "roboto"),
legend.key = element_rect(fill = "white", colour = "black"), # Proper key background
legend.key.height = unit(0.5, "cm"), # Increase height for better visibility
legend.key.width = unit(0.5, "cm"), # Keep width balanced
legend.spacing.y = unit(0.5, "cm"), # Add vertical spacing between keys
legend.box.margin = margin(t = 5, r = 5, b = 5, l = 5), # Margin around the legend box
legend.margin = margin(t = 10, r = 10, b = 10, l = 10) # Inner margin of legend
)
}
#Figure 4: new_relapse_tb_cases_tested_xpert2 ---------------------------
map5 <- ggplot(data = PAKshp_genx) +
geom_sf(aes(fill = cut(perc_confirmed_genx,
breaks = c(-Inf, 0, 20, 40, 60, 80, Inf),
labels = c("0%", "1-20%", "21-40%", "41-60%", "61-80%", "80%+"))),
colour = "white", linewidth = 0.1) +
geom_sf(data = PAKreg, colour = '#432818', fill = NA, linewidth = 0.1) +
scale_fill_manual(
name = "Percentage of confirmed TB cases tested with GenX (2018)",
values = c(
"0%" = "black",
"1-20%" = "#ffccd5",
"21-40%" = "#ff8fa3",
"41-60%" = "#ff4d6d",
"61-80%" = "#c9184a",
"80%+" = "#800f2f"
)) +  theme_dspp_cat()
map5
ggsave("PAKISTAN_case_study_analysis/figures/map5_genxtesting_perc.png", width = 18, height = 18, units = "cm", dpi = 300)
theme_dspp_cat <- function() {
theme_void() +
theme(
# Set background to white
panel.background = element_rect(fill = "white", colour = NA),
plot.background = element_rect(fill = "white", colour = NA),
# Legend settings for vertical layout
legend.position = c(0.3, 0.80), # Top-left corner inside the plot
legend.direction = "vertical", # Arrange legend items vertically
legend.title = element_text(size = 26,  family = "roboto"),
legend.text = element_text(size = 16, family = "roboto"),
legend.key = element_rect(fill = "white", colour = "black"), # Proper key background
legend.key.height = unit(0.5, "cm"), # Increase height for better visibility
legend.key.width = unit(0.5, "cm"), # Keep width balanced
legend.spacing.y = unit(0.5, "cm"), # Add vertical spacing between keys
legend.box.margin = margin(t = 0, r = 10, b = 0, l = 0),
legend.margin = margin(t = 5, r = 10, b = 5, l = 10)
)
}
#Figure 4: new_relapse_tb_cases_tested_xpert2 ---------------------------
map5 <- ggplot(data = PAKshp_genx) +
geom_sf(aes(fill = cut(perc_confirmed_genx,
breaks = c(-Inf, 0, 20, 40, 60, 80, Inf),
labels = c("0%", "1-20%", "21-40%", "41-60%", "61-80%", "80%+"))),
colour = "white", linewidth = 0.1) +
geom_sf(data = PAKreg, colour = '#432818', fill = NA, linewidth = 0.1) +
scale_fill_manual(
name = "Percentage of confirmed TB cases tested with GenX (2018)",
values = c(
"0%" = "black",
"1-20%" = "#ffccd5",
"21-40%" = "#ff8fa3",
"41-60%" = "#ff4d6d",
"61-80%" = "#c9184a",
"80%+" = "#800f2f"
)) +  theme_dspp_cat()
map5
ggsave("PAKISTAN_case_study_analysis/figures/map5_genxtesting_perc.png", width = 18, height = 18, units = "cm", dpi = 300)
ggsave("PAKISTAN_case_study_analysis/figures/map5_genxtesting_perc.png", width = 15, height = 15, units = "cm", dpi = 300)
#turn nan those > 100
PAKshp_genx$perc_confirmed_genx[PAKshp_genx$perc_confirmed_genx > 100] <- 100
map5 <- ggplot(data = PAKshp_genx) +
geom_sf(aes(fill = cut(perc_confirmed_genx,
breaks = c(-Inf, 0, 20, 40, 60, 80, Inf),
labels = c("0%", "1-20%", "21-40%", "41-60%", "61-80%", "80%+"))),
colour = "white", linewidth = 0.1) +
geom_sf(data = PAKreg, colour = '#432818', fill = NA, linewidth = 0.1) +
scale_fill_manual(
name = "Percentage of confirmed TB cases tested with GenX (2018)",
values = c(
"No GenX" = "black",
"1-20%" = "#ffccd5",
"21-40%" = "#ff8fa3",
"41-60%" = "#ff4d6d",
"61-80%" = "#c9184a",
"80%+" = "#800f2f"
)) +  theme_dspp_cat()
map5
ggsave("PAKISTAN_case_study_analysis/figures/map5_genxtesting_perc.png", width = 15, height = 15, units = "cm", dpi = 300)
#turn nan those > 100
PAKshp_genx$perc_confirmed_genx[PAKshp_genx$perc_confirmed_genx > 100] <- 100
map5 <- ggplot(data = PAKshp_genx) +
geom_sf(aes(fill = cut(perc_confirmed_genx,
breaks = c(-Inf, 0, 20, 40, 60, 80, Inf),
labels = c("0%", "1-20%", "21-40%", "41-60%", "61-80%", "80%+"))),
colour = "white", linewidth = 0.1) +
geom_sf(data = PAKreg, colour = '#432818', fill = NA, linewidth = 0.1) +
scale_fill_manual(
name = "Percentage of confirmed TB cases tested with GenX (2018)",
values = c(
"GenX not available" = "black",
"1-20%" = "#ffccd5",
"21-40%" = "#ff8fa3",
"41-60%" = "#ff4d6d",
"61-80%" = "#c9184a",
"80%+" = "#800f2f"
)) +  theme_dspp_cat()
map5
ggsave("PAKISTAN_case_study_analysis/figures/map5_genxtesting_perc.png", width = 15, height = 15, units = "cm", dpi = 300)
#turn nan those > 100
PAKshp_genx$perc_confirmed_genx[PAKshp_genx$perc_confirmed_genx > 100] <- 100
map5 <- ggplot(data = PAKshp_genx) +
geom_sf(aes(fill = cut(perc_confirmed_genx,
breaks = c(-Inf, 0, 20, 40, 60, 80, Inf),
labels = c("GenX not available", "1-20%", "21-40%", "41-60%", "61-80%", "80%+"))),
colour = "white", linewidth = 0.1) +
geom_sf(data = PAKreg, colour = '#432818', fill = NA, linewidth = 0.1) +
scale_fill_manual(
name = "Percentage of confirmed TB cases tested with GenX (2018)",
values = c(
"GenX not available" = "black",
"1-20%" = "#ffccd5",
"21-40%" = "#ff8fa3",
"41-60%" = "#ff4d6d",
"61-80%" = "#c9184a",
"80%+" = "#800f2f"
)) +  theme_dspp_cat()
map5
ggsave("PAKISTAN_case_study_analysis/figures/map5_genxtesting_perc.png", width = 15, height = 15, units = "cm", dpi = 300)
ggplot(data = PAKshp_genx) +
geom_sf(aes(fill = pmin(notified_cases_per_100k, 300)), colour = "white", linewidth = 0.1) +
geom_sf(data = PAKreg, colour = '#432818', fill = NA, linewidth = 0.1) +
scale_fill_gradientn(
name = "TB notifications per 100k in 2022",
colours = c("#FFF7EC", "#FEE8C8", "#FDBB84", "#FC8D59", "#E34A33", "#990000"),
limits = c(0, 300),
breaks = c(0, 50, 100, 150, 200, 250, 300),
labels = c("0", "50", "100", "150", "200", "250", "300+")
) + theme_dspp()
View(PAKshp)
PAKshp_genx <- PAKshp_genx %>%
mutate(cdrcat = cut(
cdr,
breaks = c(-Inf, 20, 40, 60, 80, Inf),
labels = c("0-20%", "20-40%", "40-60%", "60-80%", "80%+")
))
View(PAKshp_genx)
PAKshp_genx <- PAKshp_genx %>%
mutate(cdrcat = cut(
cdr,
breaks = c(-Inf, 0.2, 0.4, 0.6, 0.8, Inf), # Adjusted for decimal format
labels = c("0-20%", "20-40%", "40-60%", "60-80%", "80%+")
))
map6 <- ggplot(data = PAKshp_genx) +
geom_sf(aes(fill = cdrcat), colour = "white", linewidth = 0.1) +
geom_sf(data = PAKreg, colour = '#3B3B3B', fill = NA, linewidth = 0.1) +
scale_fill_manual(
name = "Case detection rate",
values = c(
"0-20%" = "#ebebff",
"20-40%" = "#bac9fe",
"40-60%" = "#5974d6",
"60-80%" = "#3b4bb8",
"80%+" = "#002a80"
)
) +
theme_dspp_cat()
# Display the map
map6
# Create the category variable based on 'cdr'
PAKshp_genx <- PAKshp_genx %>%
mutate(cdrcat = cut(
cdr,
breaks = c(-Inf, 0.25, 0.5, 0.75, 1, Inf), # Adjusted for decimal format
labels = c("0-25%", "26-50%", "51-75%", "76-90%", "100+")
))
PAKshp_genx <- PAKshp_genx %>%
mutate(cdrcat = cut(
cdr,
breaks = c(-Inf, 0.25, 0.5, 0.75, 1, Inf), # Adjusted for decimal format
labels = c("0-25%", "26-50%", "51-75%", "76-100%", ">100%") # Fixed labels
))
map6 <- ggplot(data = PAKshp_genx) +
geom_sf(aes(fill = cdrcat), colour = "white", linewidth = 0.1) +
geom_sf(data = PAKreg, colour = '#3B3B3B', fill = NA, linewidth = 0.1) +
scale_fill_manual(
name = "Case detection rate",
values = c(
"0-25%" = "#ebebff",
"26-50%" = "#bac9fe",
"51-75%" = "#5974d6",
"76-100%" = "#3b4bb8",
">100%" = "#002a80"
)
) +
theme_dspp_cat()
map6
# Extract centroids for the bubbles
PAKshp_genx_centroids <- PAKshp_genx %>%
st_centroid() %>%
st_coordinates() %>%
as.data.frame() %>%
mutate(
district = PAKshp_genx$district_pakregfile,  # Keep district name
perc_confirmed_genx = PAKshp_genx$perc_confirmed_genx # Associate GenX data
)
# Create the map
map6 <- ggplot(data = PAKshp_genx) +
geom_sf(aes(fill = cdrcat), colour = "white", linewidth = 0.1) +
geom_sf(data = PAKreg, colour = '#3B3B3B', fill = NA, linewidth = 0.1) +
geom_point(
data = PAKshp_genx_centroids,
aes(x = X, y = Y, size = perc_confirmed_genx),
color = "red", alpha = 0.7
) +
scale_fill_manual(
name = "Case detection rate",
values = c(
"0-25%" = "#ebebff",
"26-50%" = "#bac9fe",
"51-75%" = "#5974d6",
"76-100%" = "#3b4bb8",
">100%" = "#002a80"
)
) +
scale_size_continuous(
name = "GenX Testing (%)",
range = c(1, 10),  # Adjust bubble sizes
limits = c(0, 100),
breaks = c(0, 20, 40, 60, 80, 100),
labels = c("0%", "20%", "40%", "60%", "80%", "100%")
) +
guides(size = guide_legend(override.aes = list(color = "red"))) +
theme_dspp_cat()
# Display the map
map6
# Create the Case Detection Rate (CDR) categories
PAKshp_genx <- PAKshp_genx %>%
mutate(cdrcat = cut(
cdr,
breaks = c(-Inf, 0.2, 0.4, 0.6, Inf),  # Adjusted for simplified ranges
labels = c("0-20%", "20-40%", "40-60%", "80%+") # Fixed labels
))
# Extract centroids for GenX bubbles
PAKshp_genx_centroids <- PAKshp_genx %>%
st_centroid() %>%
st_coordinates() %>%
as.data.frame() %>%
mutate(
district = PAKshp_genx$district_pakregfile,  # Keep district name
perc_confirmed_genx = PAKshp_genx$perc_confirmed_genx # Associate GenX data
) %>%
filter(perc_confirmed_genx > 0) # Remove areas with 0% GenX (no bubbles)
# Create the map with simplified case detection categories and GenX bubbles
map6 <- ggplot(data = PAKshp_genx) +
geom_sf(aes(fill = cdrcat), colour = "white", linewidth = 0.1) +
geom_sf(data = PAKreg, colour = '#3B3B3B', fill = NA, linewidth = 0.1) +
geom_point(
data = PAKshp_genx_centroids,
aes(x = X, y = Y, size = cut(perc_confirmed_genx,
breaks = c(0, 20, 40, 60, 100, Inf),
labels = c("20%", "40%", "60%", "100%+"))),
color = "red", alpha = 0.7
) +
scale_fill_manual(
name = "Case detection rate",
values = c(
"0-20%" = "#ebebff",
"20-40%" = "#bac9fe",
"40-60%" = "#5974d6",
"80%+" = "#002a80"
)
) +
scale_size_manual(
name = "GenX Testing (%)",
values = c("20%" = 2, "40%" = 4, "60%" = 6, "100%+" = 8) # Set fixed bubble sizes
) +
guides(size = guide_legend(override.aes = list(color = "red"))) +
theme_dspp_cat()
# Display the final simplified map
map6
# Ensure perc_confirmed_genx is capped at 100%
PAKshp_genx$perc_confirmed_genx[PAKshp_genx$perc_confirmed_genx > 100] <- 100
# Create the Case Detection Rate (CDR) categories
PAKshp_genx <- PAKshp_genx %>%
mutate(cdrcat = cut(
cdr,
breaks = c(-Inf, 0.2, 0.4, 0.6, Inf),  # Adjusted for simplified ranges
labels = c("0-20%", "20-40%", "40-60%", "80%+") # Fixed labels
))
# Extract centroids for GenX bubbles
PAKshp_genx_centroids <- PAKshp_genx %>%
st_centroid() %>%
st_coordinates() %>%
as.data.frame() %>%
mutate(
district = PAKshp_genx$district_pakregfile,  # Keep district name
perc_confirmed_genx = PAKshp_genx$perc_confirmed_genx # Associate GenX data
) %>%
filter(perc_confirmed_genx > 0) # Remove areas with 0% GenX (no bubbles)
# Create the map with simplified case detection categories and GenX bubbles
map6 <- ggplot(data = PAKshp_genx) +
geom_sf(aes(fill = cdrcat), colour = "white", linewidth = 0.1) +
geom_sf(data = PAKreg, colour = '#3B3B3B', fill = NA, linewidth = 0.1) +
geom_point(
data = PAKshp_genx_centroids,
aes(x = X, y = Y, size = cut(perc_confirmed_genx,
breaks = c(0, 20, 40, 60, 100, Inf),
labels = c("20%", "40%", "60%", "100%+"))),
color = "red", alpha = 0.7
) +
scale_fill_manual(
name = "Case detection rate",
values = c(
"0-20%" = "#ebebff",
"20-40%" = "#bac9fe",
"40-60%" = "#5974d6",
"80%+" = "#002a80"
)
) +
scale_size_manual(
name = "GenX Testing (%)",
values = c("20%" = 2, "40%" = 4, "60%" = 6, "100%+" = 8) # Set fixed bubble sizes
) +
guides(size = guide_legend(override.aes = list(color = "red"))) +
theme_dspp_cat()
# Display the final simplified map
map6
# Ensure perc_confirmed_genx is capped at 100%
PAKshp_genx$perc_confirmed_genx[PAKshp_genx$perc_confirmed_genx > 100] <- 100
# Create the Case Detection Rate (CDR) categories
PAKshp_genx <- PAKshp_genx %>%
mutate(cdrcat = cut(
cdr,
breaks = c(-Inf, 0.2, 0.4, 0.6, Inf),  # Adjusted for simplified ranges
labels = c("0-20%", "20-40%", "40-60%", "80%+") # Fixed labels
))
# Extract centroids for GenX bubbles
PAKshp_genx_centroids <- PAKshp_genx %>%
st_centroid() %>%
st_coordinates() %>%
as.data.frame() %>%
mutate(
district = PAKshp_genx$district_pakregfile,  # Keep district name
perc_confirmed_genx = PAKshp_genx$perc_confirmed_genx # Associate GenX data
) %>%
filter(perc_confirmed_genx > 0) # Remove areas with 0% GenX (no bubbles)
# Create the map with simplified case detection categories and GenX bubbles
map6 <- ggplot(data = PAKshp_genx) +
geom_sf(aes(fill = cdrcat), colour = "white", linewidth = 0.1) +
geom_sf(data = PAKreg, colour = '#3B3B3B', fill = NA, linewidth = 0.1) +
geom_point(
data = PAKshp_genx_centroids,
aes(x = X, y = Y, size = cut(perc_confirmed_genx,
breaks = c(0, 20, 40, 60, 100, Inf), # 5 breaks
labels = c("20%", "40%", "60%", "80%+", "100%+"))), # 5 labels
color = "red", alpha = 0.7
)
scale_fill_manual(
name = "Case detection rate",
values = c(
"0-20%" = "#ebebff",
"20-40%" = "#bac9fe",
"40-60%" = "#5974d6",
"80%+" = "#002a80"
)
) +
scale_size_manual(
name = "GenX Testing (%)",
values = c("20%" = 2, "40%" = 4, "60%" = 6, "100%+" = 8) # Set fixed bubble sizes
) +
guides(size = guide_legend(override.aes = list(color = "red"))) +
theme_dspp_cat()
PAKshp_genx$perc_confirmed_genx[PAKshp_genx$perc_confirmed_genx > 100] <- 100
# Create the Case Detection Rate (CDR) categories
PAKshp_genx <- PAKshp_genx %>%
mutate(cdrcat = cut(
cdr,
breaks = c(-Inf, 0.2, 0.4, 0.6, Inf),  # Adjusted for simplified ranges
labels = c("0-20%", "20-40%", "40-60%", "80%+") # Fixed labels
))
# Extract centroids for GenX bubbles
PAKshp_genx_centroids <- PAKshp_genx %>%
st_centroid() %>%
st_coordinates() %>%
as.data.frame() %>%
mutate(
district = PAKshp_genx$district_pakregfile,  # Keep district name
perc_confirmed_genx = PAKshp_genx$perc_confirmed_genx # Associate GenX data
) %>%
filter(perc_confirmed_genx > 0) # Remove areas with 0% GenX (no bubbles)
# Create the map with simplified case detection categories and GenX bubbles
map6 <- ggplot(data = PAKshp_genx) +
geom_sf(aes(fill = cdrcat), colour = "white", linewidth = 0.1) +
geom_sf(data = PAKreg, colour = '#3B3B3B', fill = NA, linewidth = 0.1) +
geom_point(
data = PAKshp_genx_centroids,
aes(x = X, y = Y, size = cut(perc_confirmed_genx,
breaks = c(0, 20, 40, 60, 100, Inf), # 5 breaks
labels = c("20%", "40%", "60%", "80%+", "100%+"))), # 5 labels
color = "red", alpha = 0.7
) +
scale_fill_manual(
name = "Case detection rate",
values = c(
"0-20%" = "#ebebff",
"20-40%" = "#bac9fe",
"40-60%" = "#5974d6",
"80%+" = "#002a80"
)
) +
scale_size_manual(
name = "GenX Testing (%)",
values = c("20%" = 2, "40%" = 4, "60%" = 6, "100%+" = 8) # Set fixed bubble sizes
) +
guides(size = guide_legend(override.aes = list(color = "red"))) +
theme_dspp_cat()
# Display the final simplified map
map6
Create the Case Detection Rate (CDR) categories
# Create the Case Detection Rate (CDR) categories
PAKshp_genx <- PAKshp_genx %>%
mutate(cdrcat = cut(
cdr,
breaks = c(-Inf, 0.2, 0.4, 0.6, Inf),  # Adjusted for simplified ranges
labels = c("0-20%", "20-40%", "40-60%", "80%+") # Fixed labels
))
# Extract centroids for GenX bubbles
PAKshp_genx_centroids <- PAKshp_genx %>%
st_centroid() %>%
st_coordinates() %>%
as.data.frame() %>%
mutate(
district = PAKshp_genx$district_pakregfile,  # Keep district name
perc_confirmed_genx = PAKshp_genx$perc_confirmed_genx # Associate GenX data
) %>%
filter(perc_confirmed_genx > 0) # Remove areas with 0% GenX (no bubbles)
# Create the map with simplified case detection categories and GenX bubbles
map6 <- ggplot(data = PAKshp_genx) +
geom_sf(aes(fill = cdrcat), colour = "white", linewidth = 0.1) +
geom_sf(data = PAKreg, colour = '#3B3B3B', fill = NA, linewidth = 0.1) +
geom_point(
data = PAKshp_genx_centroids,
aes(x = X, y = Y, size = cut(perc_confirmed_genx,
breaks = c(0, 20, 40, 60, 100, Inf), # 5 breaks
labels = c("20%", "40%", "60%", "80%+", "100%+"))), # 5 labels
color = "red", alpha = 0.7
) +
scale_fill_manual(
name = "Case detection rate",
values = c(
"0-20%" = "#ebebff",
"20-40%" = "#bac9fe",
"40-60%" = "#5974d6",
"80%+" = "#002a80"
)
) +
scale_size_manual(
name = "GenX Testing (%)",
values = c("20%" = 2, "40%" = 4, "60%" = 6, "100%+" = 8) # Set fixed bubble sizes
) +
guides(size = guide_legend(override.aes = list(color = "red"))) +
theme_dspp_cat()
# Display the final simplified map
map6
