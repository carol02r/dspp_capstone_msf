snapshot_files <-   c(
'tb',
'sty',
'tpt',
'tx',
'drnew',
'drret',
'drhnew',
'drhret',
'drfq',
'drroutine',
'agg',
'monthly',
'covid',
'ltbi',
'vrgtb',
'finance'
)
load_gtb <- function(df_name,               #basename of data file/data.frame
convert_dots = TRUE,   #convert . in data dataname to _
convert_dashes = FALSE #convert _ in data dataname to .
){
# Convenience function to load a data object saved as an rda file from the GTB database
# and returns it as a data object (dataframe or data table)
#
# Usage  my_cty_dataframe <- load_gtb("cty")
#
#
snapshot_files <-   c(
'tb',
'sty',
'tpt',
'tx',
'drnew',
'drret',
'drhnew',
'drhret',
'drfq',
'drroutine',
'agg',
'monthly',
'covid',
'ltbi',
'vrgtb',
'finance'
)
# Find out if the requested file is part of a snapshot
is_snapshot_file <- length(grep(df_name, snapshot_files, fixed = TRUE))
if (is_snapshot_file >= 1) {
# Use function latest_snapshot_date() to identify the folder name with the latest GTB snapshot data
# and load it into the local envirnment
load(paste0(paste0(here::here("data/gtb"),
"/snapshot_",
latest_snapshot_date(),
"/",
df_name,
".rda")),
envir = environment())
} else {
if(df_name %in% c('est','global','regional')){ #est handled differently due to different location
fn <- here::here('inc_mort/analysis/')
fn <- paste0(fn,df_name,'.rda')
if(!file.exists(fn)) stop(paste0('Estimate ',df_name,' not ready yet!'))
load(fn,envir = environment())
} else {
## Use the location of the "other" set of GTB data files (not country-reported data)
## and load it into the local envirnment
load(paste0(here::here("data/gtb/other"),
"/",
df_name,
".rda"),
envir = environment())
}
}
# Use get() to work with the recently loaded object by name
# and refer to it as df
df <- get(df_name,
envir = environment())
# If requested, undo PG's conversion of underscores to dots in variable names
if (convert_dots == TRUE) {
names(df) <- gsub('[.]', '_', names(df))
}
## If needed, convert underscores to dots in variable names
if(convert_dashes == TRUE){
names(df) <- gsub('_','\\.',names(df))
}
# Return the data object
return(df)
}
latest_snapshot_date <- function(){
# Get the date of the most recent GTB data snapshot
# Get list of GTB data subfolders
snapshots <- list.dirs(path = here::here("data/gtb"),
full.names = FALSE,
recursive = FALSE)
# Restrict the list to snapshot folders
snapshots <- snapshots[grep(pattern = "snapshot_", snapshots)]
# Extract the date part of the folder names and find the folder with the maximum date
# This will be the folder with the latest set of snapshot files
latest_snapshot <- max(as.Date(substr(snapshots, 10, 20)))
return(latest_snapshot)
}
#' ---
#' title: Download BCG indicator from the WHO Global Health Observatory
#' author: Hazim Timimi
#' date: 2023-05-31
#' output:
#'    html_document:
#'      mode: selfcontained
#'      toc: true
#'      toc_depth: 3
#'      toc_float: true
#'      number_sections: true
#'      theme: flatly
#'      highlight: zenburn
#'      df_print: paged
#'      code_folding: hide
#' ---
#' (Last updated: `r Sys.Date()`)
#'
#' # Download the BCG indicator for 2015 onwards from the GHO at both country and regional/global levels
#'
#' indicator code WHS4_543 is the BCG immunisation coverage among 1-year-olds
#' https://www.who.int/data/gho/data/indicators/indicator-details/GHO/bcg-immunization-coverage-among-1-year-olds-(-)
#'
#' Dependences:
#'  - libraries dplyr, ghost and here
#'
#' Output:
#'  - bcg_gho_country.csv file in the ~/data/gho/ folder
#'  - bcg_gho_agg.csv file in the ~/data/gho/ folder
# Set the location of the output folder
#
gho_folder <- here::here("data/gho")
# Use the ghost package (https://github.com/gpw13/ghost) to get the GHO indicator data into a dataframe
# (Both country-level and aggregate)
#
bcg_gho_country <- ghost::gho_data("WHS4_543") |>
dplyr::filter(TimeDim >= 2015 & SpatialDimType == "COUNTRY") |>
dplyr::mutate(bcg_coverage = as.integer(Value)) |>
dplyr::select(iso3 = SpatialDim,
year = TimeDim,
bcg_coverage)
install.packages("ghost")
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Data preparation script for ch2-2.rmd
# Takuya Yamanaka, June 2024
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Load chapter 2 packages, settings and data
source(here::here('report/ch2_load_data.r'))
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Data preparation script for ch2-2.rmd
# Takuya Yamanaka, June 2024
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Load chapter 2 packages, settings and data
source(here::here('WHO/gtbreport2024/report/ch2_load_data.r'))
install.packages("gtbreport")
install.packages("remotes")
remotes::install_github("glaziou/gtbreport")
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Data preparation script for ch2-2.rmd
# Takuya Yamanaka, June 2024
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Load chapter 2 packages, settings and data
source(here::here('WHO/gtbreport2024/report/ch2_load_data.r'))
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Data preparation script for ch2-2.rmd
# Takuya Yamanaka, June 2024
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Load chapter 2 packages, settings and data
source(here::here('WHO/gtbreport2024/report/ch2_load_data.r'))
load::loaf_start('ch2-2_prepare_data.r')
source('/Users/cameliagelil/Documents/GitHub/dspp_capstone_msf/import/load_gtb.R')
source('/Users/cameliagelil/Documents/GitHub/dspp_capstone_msf/WHO/gtbreport2024/import/load_gtb.R')
source("~/Documents/GitHub/dspp_capstone_msf/WHO/gtbreport2024/report/ch2-2_prepare_data.r")
View(load_gtb)
load_gtb <- function(df_name,               #basename of data file/data.frame
convert_dots = TRUE,   #convert . in data dataname to _
convert_dashes = FALSE #convert _ in data dataname to .
){
# Convenience function to load a data object saved as an rda file from the GTB database
# and returns it as a data object (dataframe or data table)
#
# Usage  my_cty_dataframe <- load_gtb("cty")
#
#
snapshot_files <-   c(
'tb',
'sty',
'tpt',
'tx',
'drnew',
'drret',
'drhnew',
'drhret',
'drfq',
'drroutine',
'agg',
'monthly',
'covid',
'ltbi',
'vrgtb',
'finance'
)
# Find out if the requested file is part of a snapshot
is_snapshot_file <- length(grep(df_name, snapshot_files, fixed = TRUE))
if (is_snapshot_file >= 1) {
# Use function latest_snapshot_date() to identify the folder name with the latest GTB snapshot data
# and load it into the local envirnment
load(paste0(paste0(here::here("WHO/gtbreport2024/data/gtb"),
"/snapshot_",
latest_snapshot_date(),
"/",
df_name,
".rda")),
envir = environment())
} else {
if(df_name %in% c('est','global','regional')){ #est handled differently due to different location
fn <- here::here('inc_mort/analysis/')
fn <- paste0(fn,df_name,'.rda')
if(!file.exists(fn)) stop(paste0('Estimate ',df_name,' not ready yet!'))
load(fn,envir = environment())
} else {
## Use the location of the "other" set of GTB data files (not country-reported data)
## and load it into the local envirnment
load(paste0(here::here("WHO/gtbreport2024/data/gtb/other"),
"/",
df_name,
".rda"),
envir = environment())
}
}
g
nhjk
bgj
load_gtb <- function(df_name,               #basename of data file/data.frame
convert_dots = TRUE,   #convert . in data dataname to _
convert_dashes = FALSE #convert _ in data dataname to .
){
# Convenience function to load a data object saved as an rda file from the GTB database
# and returns it as a data object (dataframe or data table)
#
# Usage  my_cty_dataframe <- load_gtb("cty")
#
#
snapshot_files <-   c(
'tb',
'sty',
'tpt',
'tx',
'drnew',
'drret',
'drhnew',
'drhret',
'drfq',
'drroutine',
'agg',
'monthly',
'covid',
'ltbi',
'vrgtb',
'finance'
)
# Find out if the requested file is part of a snapshot
is_snapshot_file <- length(grep(df_name, snapshot_files, fixed = TRUE))
if (is_snapshot_file >= 1) {
# Use function latest_snapshot_date() to identify the folder name with the latest GTB snapshot data
# and load it into the local envirnment
load(paste0(paste0(here::here("WHO/gtbreport2024/data/gtb"),
"/snapshot_",
latest_snapshot_date(),
"/",
df_name,
".rda")),
envir = environment())
} else {
if(df_name %in% c('est','global','regional')){ #est handled differently due to different location
fn <- here::here('inc_mort/analysis/')
fn <- paste0(fn,df_name,'.rda')
if(!file.exists(fn)) stop(paste0('Estimate ',df_name,' not ready yet!'))
load(fn,envir = environment())
} else {
## Use the location of the "other" set of GTB data files (not country-reported data)
## and load it into the local envirnment
load(paste0(here::here("WHO/gtbreport2024/data/gtb/other"),
"/",
df_name,
".rda"),
envir = environment())
}
}
